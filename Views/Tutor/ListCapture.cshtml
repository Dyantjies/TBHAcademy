@model IEnumerable<TBHAcademy.Models.TeamMark>

@{
    ViewData["Title"] = "ListCapture";
    Layout = "~/Views/Shared/_TutorLayoutcshtml.cshtml";
}

<h1>ListCapture</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Teamid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StSurname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TeamOne)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TeamTwo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TeamThree)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TeamFour)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Teamid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StSurname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamOne)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamTwo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamThree)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamFour)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
