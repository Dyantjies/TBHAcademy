@*@model IEnumerable<TBHAcademy.Models.ScheduleMeeting>*@
@using Microsoft.AspNetCore.Identity
@using TBHAcademy.Areas.Identity.Data
@using TBHAcademy.Models

@inject SignInManager<TBHAcademyUser> SignInManager
@inject UserManager<TBHAcademyUser> UserManager


@{
    ViewData["Title"] = "MeetingHistory";
    Layout = "~/Views/Shared/_TutorLayoutcshtml.cshtml";
}



<div id="ViewHeader" class="header w-100 mb-3" style="background: rgba(6, 73, 181,0.5)">
    <div class="pt-1 m-0 row">
        <h5 class="text-white text-center ">@ViewBag.Message</h5>
    </div>
</div>

<div class=" row pt-2 ">

    <i onclick="window.print()" class='bx bxs-printer col-4' style='color:#01acff'></i>

</div>

<div id="StudentInfo" class="col-6 mt-2">
    <h4>Tutor Information</h4>
    First Name: @UserManager.GetUserAsync(User).Result.FirstName <br />
    Last  Name:  @UserManager.GetUserAsync(User).Result.LastName<br />
    Date of Registration: @UserManager.GetUserAsync(User).Result.date
</div>

    @try
    {

        <table class="table table-striped">
            <thead>
                <tr>

                    <td>Appointment Date </td>
                    <td>Meet purpose </td>
                    <td>Student</td>
                    <td>Meeting Link </td>
  
                </tr>
            </thead>
            <tbody>
                @foreach (MyMeeting S in ViewBag.DisplayMeeting)
                {
                    <tr>
                  
                        <td>@S.ScheduleMeetingVM.AppointmentDate</td>
                        <td>@S.ScheduleMeetingVM.Description</td>
                        <td>@S.UserVM.FirstName @S.UserVM.LastName </td>
                        <td>@S.ScheduleMeetingVM.Link</td>

                    </tr>
                }

            </tbody>

        </table>
    }
    catch
    {
        <h3>No enrolled modules</h3>
    }

<script type="text/javascript">
    function Confirmation(event, FacultyId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You want to delete this faculty ?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Confirm',
            preConfirm: false
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Success!',
                    'Faculty Deleted',
                    'success'
                ).then(result => {
                    document.querySelector(`#_${FacultyId}`).submit();
                })
            }
        })
    }
</script>

<script defer>
    window.onload = function () {
        document.getElementById('StudentInfo').style.visibility = "hidden";
        document.getElementById('header12').style.visibility = "hidden";
        document.getElementById('Report').setAttribute("id", "report");

    }
    const DownloadBtn = document.getElementById('Downloadbtn');
    DownloadBtn.addEventListener("click", myFunction);

    function myFunction() {
        document.getElementById('Downloadbtn').style.visibility = "hidden";
        document.getElementById('btnUp').style.visibility = "hidden"
        document.getElementById('header').style.visibility = "hidden";
        document.getElementById('header12').style.visibility = "visible";
        document.getElementById('report').setAttribute("id", "Report")
        document.getElementById('StudentInfo').style.visibility = "visible";
        window.print();
        document.getElementById('StudentInfo').style.visibility = "hidden";
        document.getElementById('header').style.visibility = "visible";
        document.getElementById('btnUp').style.visibility = "visible"
        document.getElementById('Downloadbtn').style.visibility = "visible";
        document.getElementById('header12').style.visibility = "hidden";
        document.getElementById('Report').setAttribute("id", "report");

    }

</script>
